type User{
    id: ID!
    username: String!
    email: String!

    meetups: [Meetup!]!
}

type Meetup {
    id: ID!
    name: String!
    description: String!
    user: User!
}

input NewMeetup {
    name: String!
    description: String!
}

type Query{
    meetups: [Meetup!]!
}

type Mutation {
    createMeetup(input: NewMeetup!): Meetup!
}
# go mod init github.com/pjfcs/goGraphQL_1.13
# go get -d github.com/99designs/gqlgen@v0.10.2
# go run github.com/99designs/gqlgen init
# go get github.com/go-pg/pg/v9
# go get github.com/golang-migrate/migrate/v4

# apt update && apt install -y lsb-release
# curl -s https://packagecloud.io/install/repositories/golang-migrate/migrate/script.deb.sh | bash
# apt update && apt install -y migrate

# source .env
# migrate create -ext sql -dir postgres/migrations create_users
# migrate create -ext sql -dir postgres/migrations create_meetups
# migrate -path "postgres/migrations" -database "$POSTGRES_URL" up

# go run github.com/vektah/dataloaden UserLoader string '*github.com/pjfcs/goGraphQL_1.13/models.User'